name: book bazar application

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Image
        if: matrix.service == 'frontend'
        uses: docker/build-push-action@v5
        with:
          context: ./bookbazar-client
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/project-frontend:latest

      - name: Build and Push Backend Image
        if: matrix.service == 'backend'
        uses: docker/build-push-action@v5
        with:
          context: ./bookbazar-backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/project-backend:latest

      - name: notify
        run: echo "Frontend and Backend images pushed to Docker Hub"

  setup-bastion_host:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:                               
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          echo "${{ secrets.BASTION_SSH_KEY }}" > mainaccount.pem
          chmod 600 mainaccount.pem

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Ansible with AWS support
        run: pip install "ansible[amazon]" boto3 botocore

      - name: Run Ansible Playbook
        run: |
          ansible-playbook infra/ansible/check-playbook.yml \
          -i infra/ansible/inventory/aws_ec2.yml \
          -u ubuntu --become \
          --private-key mainaccount.pem \
          --ssh-extra-args "-o StrictHostKeyChecking=no"

  deploy-database:
    needs: setup-bastion_host
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy MongoDB
        run: kubectl apply -f k8s/mongo-deployment.yml

  deploy-backend:
    needs: deploy-database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy Backend
        run: kubectl apply -f k8s/backend-deployment.yml

  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy Frontend
        run: kubectl apply -f k8s/frontend-deployment.yml
